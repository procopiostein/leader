%extract features from chosen target and
%stores it in a matlab variable (proc_target)
%must pass as arguments the name of the file, generated by ROS 
%log file from process_target, and the id of the desired subject

function [proc_target]=leader_features(file,target_id)

% input file format: 
% 1: id
% 2: good/bad tag
% 3: time
% 4: pos x
% 5: pos y
% 6: vel
% 7: theta
% 8: pos diff
% 9: head diff
%10: angle 2 robot 
%11: velocity diff 

%printf("%d,%d,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f\n",
%         target_id, badLeader, time_elapsed.toSec(),
%         target_x, target_y, target_vel, target_theta,
%         position_diff, heading_diff, angle_to_robot, velocity_diff);

% output file format: 
% 1: time
% 2: good/bad tag
% 3: mean vel                 1
% 4: mean vel diff            2
% 5: mean head diff           3
% 6: angle 2 robot            4
% 7: mean dist 2 robot        5

%initialize vars
begin_sweep = 1;
end_sweep = 1;
counter = 1;

mean_fig = figure; hold on; grid on;

%load and rearrange targets file
list = load(file);
range = max(list(:,1)) + 2;
cm = jet(range);

figure,hold;
for i = 1:length(list);
    if(list(i,1)==-1)
       plot3(list(i,4),list(i,5),list(i,3),'bo');
    elseif(list(i,1)==target_id)
       plot3(list(i,4),list(i,5),list(i,3),'ro');
    end
end

list = sortrows(list);

% separate target from robot
while counter < length(list)
    while list(begin_sweep,1) == list(end_sweep,1)
        end_sweep = end_sweep + 1;
        counter = counter + 1;
        if counter > length(list) 
            break
        end
    end
    
    %only pick one target, according to input of function
    switch list(begin_sweep,1)
        case -1
            robot = list(begin_sweep:end_sweep-1,:);
        case target_id
            target = list(begin_sweep:end_sweep-1,:);
    end
    
    begin_sweep = end_sweep;
end

% filter data
proc_target(length(target),7) = 0;
proc_target(:,1) = target(:,3);
proc_target(:,2) = target(:,2);
proc_target(:,3) = target(:,6);  %vel
proc_target(:,4) = target(:,11); %vel diff
proc_target(:,5) = target(:,9);  %head diff
proc_target(:,6) = target(:,10); %angle 2 robot
proc_target(:,7) = target(:,8);  %pos diff (dist)
    
%%%%%%%%% PLOTTING %%%%%%%%%%%%

%plot good/bad leader index
tag = find(diff(proc_target(:,2)));

figure(mean_fig);
plot(proc_target(:,1),proc_target(:,3),'b-');
plot(proc_target(:,1),proc_target(:,4),'r-');
plot(proc_target(:,1),proc_target(:,5),'k-');
plot(proc_target(:,1),proc_target(:,6),'g-');
plot(proc_target(:,1),proc_target(:,7),'y-');
legend('vel','vel diff','head diff','angle', 'distance',...
    'Location','NorthWest');
title('mean features from target 2 robot');
if ~isempty(tag)
    line([proc_target(tag,1) proc_target(tag,1)],[0 5])
end

figure(mean_fig);
plot(proc_target(:,1),proc_target(:,3),'bo');
plot(proc_target(:,1),proc_target(:,4),'ro');
plot(proc_target(:,1),proc_target(:,5),'ko');
plot(proc_target(:,1),proc_target(:,6),'go');
plot(proc_target(:,1),proc_target(:,7),'yo');
legend('vel','vel diff','head diff','angle', 'distance',...
    'Location','NorthWest');
